name: New Issue Workflow

on:
  issues:
    types: [opened]

env:
  AWS_BUCKET: 'your-bucket-name'  # Add the bucket name here as a variable

jobs:
  issue-response:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write
      pull-requests: write

    steps:
      - name: Add labels
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['carbon-ai']
            })

      - name: Create welcome comment
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Thanks for opening this issue! Carbon AI is starting to work on it. üöÄ'
            })

      - name: Checkout Carbon AI
        uses: actions/checkout@v4
        with:
          repository: dealancer/carbon-cli
          path: carbon-cli

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          cd carbon-cli
          pip install -r requirements.txt
          cd ..

      - name: Checkout project repository
        uses: actions/checkout@v4
        with:
          path: codebase

      - name: Create zip of codebase
        run: |
          zip -r codebase.zip codebase -x "*.git/*"
          echo "Created codebase.zip archive"

      - name: Run Carbon CLI
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_BUCKET: ${{ env.AWS_BUCKET }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          CARBON_PROJECT: ${{ github.repository }}
          CARBON_MODEL: gpt-4o
          CARBON_INSTRUCTIONS:
          CARBON_WORK_DIR: .
          CARBON_PROJECT_FILENAME: codebase.zip
          CARBON_META_FILENAME: meta.json
          CARBON_ISSUE_ID: ${{ github.event.issue.number }}
          CARBON_REQUEST: "${{ github.event.issue.title }}\n\n${{ github.event.issue.body }}"
        run: |
          python carbon-cli/src/run.py create issue

      - name: Unzip modifierd codebase
        run: |
          unzip -o codebase.zip
          echo "Unzipped codebase.zip archive"

      - name: Get commit message and summary of changes
        run: |
          COMMIT_MESSAGE=$(jq -r '.pr_title // .commit_message' meta.json)
          EXTENDED_DETAILS=$(jq -r '.extended_details // ""' meta.json)
          echo "COMMIT_MESSAGE=${COMMIT_MESSAGE}" >> $GITHUB_ENV
          echo "EXTENDED_DETAILS<<EOF" >> $GITHUB_ENV
          echo "${EXTENDED_DETAILS}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Configure Git
        run: |
          git config --global user.name 'Carbon AI'
          git config --global user.email 'carbon-ai@example.com'

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          sudo apt-get install -y jq
          cd codebase
          git checkout -b carbon/issue-${{ github.event.issue.number }}
          git add .
          git commit -m "Carbon AI: ${{ env.COMMIT_MESSAGE }}"
          git push origin carbon/issue-${{ github.event.issue.number }}

      - name: Create commit comment
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Carbon AI has committed changes to the branch \`carbon/issue-${context.issue.number}\`. ‚úíÔ∏è`
            })

      - name: Create GitHub PR
        id: create_pr
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            const response = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Carbon AI: ${process.env.COMMIT_MESSAGE}`,
              body: `This PR addresses issue #${context.issue.number}\n\n${process.env.EXTENDED_DETAILS}`,
              head: `carbon/issue-${context.issue.number}`,
              base: 'main'
            });
            
            // Add labels to the PR
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: response.data.number,
              labels: ['carbon-ai']
            });

            // Set PR number as output
            core.setOutput('pr_number', response.data.number);

      - name: Run Carbon CLI
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_BUCKET: ${{ env.AWS_BUCKET }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          CARBON_PROJECT: ${{ github.repository }}
          CARBON_MODEL: gpt-4o
          CARBON_INSTRUCTIONS:
          CARBON_WORK_DIR: .
          CARBON_META_FILENAME: meta.json
          CARBON_ISSUE_ID: ${{ github.event.issue.number }}
          CARBON_PR_ID: ${{ steps.create_pr.outputs.pr_number }}
          CARBON_REQUEST: "${{ github.event.issue.title }}\n\n${{ github.event.issue.body }}"
        run: |
          python carbon-cli/src/run.py map pr

      - name: Create PR comment
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Carbon AI has created pull request #${steps.create_pr.outputs.pr_number} for you to review. üëÄ`
            })